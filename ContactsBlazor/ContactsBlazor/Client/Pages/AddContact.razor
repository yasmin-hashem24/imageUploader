@page "/AddContact"
@using EdgeDB
@using System.Collections.Generic
@using System.Net.Http
@using System.Text.Json
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager


<EditForm Model="@contact" OnValidSubmit="HandleAddContact">
 
        <div class="container">
        
            <label for="FirstName">First Name:</label>
            <InputText id="FirstName" @bind-Value="contact.FirstName" class="form-control" required />

             <label for="UserName">UserName Name:</label>
           <InputText id="UserName" @bind-Value="contact.UserName" class="form-control" required />

            <label for="LastName">Last Name:</label>
           <InputText id="LastName" @bind-Value="contact.LastName" class="form-control" required />

            <label for="Email">Email:</label>
            <InputText id="Email" @bind-Value="contact.Email" class="form-control" required />

            <label for="Title">Title:</label>
           <InputText id="Title" @bind-Value="contact.Title" class="form-control" required />

            <label for="Role">Role:</label>
            <InputText id="Role" @bind-Value="contact.Role" class="form-control" required />

            <label for="Description">Description:</label>
            <InputText id="Description" @bind-Value="contact.Description" class="form-control" required />

            <label for="DateOfBirth">Date of Birth:</label>
            <InputText id="DateOfBirth" @bind-Value="contact.DateOfBirth" class="form-control" required />

            <label for="MarriageStatus">Married:</label>
            <InputCheckbox id="MarriageStatus" @bind-Value="contact.MarriageStatus" class="form-check-input"/>

            <label for="Password">Password:</label>
            <InputText id="Password" @bind-Value="contact.Password" type="password" class="form-control" required />

             <button type="submit" class="btn btn-primary">Add</button>
    </div>
<style>


    .container {
        max-height: 300px;
      
    }
   
    form {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
        position: relative;
        background-color: #fff;
        border-radius: 10px;
        width: 500px;
    }

   .form-control {
        padding: 10px;
        margin: 10px;
        border-radius: 5px;
        background-color: #f1f1f1;
        width: 100%;
    }

   .btn-primary {
        padding: 10px;
        margin: 10px;
        border-radius: 5px;
        background-color: #4CAF50;
        color: #fff;
        font-weight: bold;
        cursor: pointer;
        width: 100%;
    }
</style>
</EditForm>

@code {

    private InputContact contact = new InputContact();
    private List<Contact> ContactList { get;  set; } = new();
    private string SearchTerm { get; set; } = "";


    private async Task OnGetAsync()
    {

        var response = await HttpClient.GetAsync($"/SearchContact?term={SearchTerm}");

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            ContactList = JsonSerializer.Deserialize<List<Contact>>(content);
        }
    }

    
    private async Task HandleAddContact()
    {
        Console.WriteLine("INSIDE HANDLE");
         var response = await HttpClient.PostAsJsonAsync("/AddConactPost", contact);
       
         NavigationManager.NavigateTo("/AddContact");
        
    }
}