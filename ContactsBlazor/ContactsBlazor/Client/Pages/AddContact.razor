@page "/AddContact"
@using EdgeDB
@using System.Collections.Generic
@using System.Net.Http
@using System.Text.Json
@using Microsoft.AspNetCore.Components.Web

@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
<body>

    <form method="post" @onsubmit="Logout" style="position: absolute; top: 10px; right: 10px;">
        <input type="submit" value="Logout"
            style="background-color: darkred; color: white; font-weight: bold; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer;">
    </form>
    <div class="container">
    <form method="post" @onsubmit="HandleAddContact">
        <label for="FirstName">First Name:</label>
        <input type="text" id="FirstName" @bind="contact.FirstName" required>

        <label for="LastName">Last Name:</label>
        <input type="text" id="LastName" @bind="contact.LastName" required>

        <label for="Email">Email:</label>
        <input type="text" id="Email" @bind="contact.Email" required>

        <label for="Title">Title:</label>
        <input type="text" id="Title" @bind="contact.Title" required>

        <label for="Description">Description:</label>
        <input type="text" id="Description" @bind="contact.Description" required>

        <label for="DateOfBirth">Date of Birth:</label>
        <input type="text" id="DateOfBirth" @bind="contact.DateOfBirth" required>

         <label for="Password">Password:</label>
        <input type="password" id="Password" @bind="contact.Password" required>

        <label for="UserName">UserName:</label>
        <input type="UserName" id="UserName" @bind="contact.UserName" required>

        <label for="Role">Role:</label>
        <input type="text" id="Role" @bind="contact.Role" required>

        <label for="MarriageStatus">Married:</label>
        <input type="checkbox" id="MarriageStatus" @bind="contact.MarriageStatus" value="true">

        <input type="submit" value="Add">
    </form>
</div>
    
     <form method="get">
    <label for="SearchTerm">SearchTerm:</label>
    <input type="text" id="SearchTerm" name="SearchTerm" @bind="SearchTerm">
    <input type="button" value="Search" @onclick="SearchContacts" />

</form>
    
    <h2>Contact List</h2>

  <table>
    <thead>
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>Title</th>
            <th>Description</th>
            <th>Date of Birth</th>
            <th>Role</th>
            <th>UserName</th>
            <th>Married</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
       @foreach (var contact in ContactList)
{
    <tr>
        <td>@contact.first_name</td>
        <td>@contact.last_name</td>
        <td>@contact.email</td>
        <td>@contact.title</td>
        <td>@contact.description</td>
        <td>@contact.date_of_birth</td>
        <td>@contact.role</td>
        <td>@contact.user_name</td>
        <td>@(contact.marriage_status ? "Yes" : "No")</td>
        <td style="text-align: center; padding: 10px;">
        <button type="submit" class="btn" @onclick="async () => await EditatAdd(contact.user_name)">Edit</button>

        </td>
    </tr>
}
    </tbody>
</table>


</body>

<style>
    .container {
        max-height: 400px;
        overflow-y: auto;
    }

    form {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        width: 300px;
    }

    input[type="text"], input[type="checkbox"] {
        padding: 10px;
        margin: 10px;
        border-radius: 5px;
        background-color: #f1f1f1;
        width: 100%;
    }

    input[type="submit"],input[type="button"] {
        padding: 10px;
        margin: 10px;
        border-radius: 5px;
        background-color: #4CAF50;
        color: #fff;
        font-weight: bold;
        cursor: pointer;
        width: 100%;
    }
</style>

@code {

    private InputContact contact = new InputContact();
    private List<Contact> ContactList { get;  set; } = new();
    private string SearchTerm { get; set; } = "";

   private async Task SearchContacts()
{
    var response = await HttpClient.PostAsync("/SearchContactPost", new StringContent(SearchTerm));
    var content = await response.Content.ReadAsStringAsync();

    ContactList = JsonSerializer.Deserialize<List<Contact>>(content);
}
    protected override async Task OnInitializedAsync()
    {
         await SearchContacts();
    }

    
    private async Task HandleAddContact()
    {
        Console.WriteLine("INSIDE HANDLE");
         var response = await HttpClient.PostAsJsonAsync("/AddConactPost", contact);
       
         NavigationManager.NavigateTo("/AddContact");
        
    }
    private async Task Logout()
    {
       Console.WriteLine("INSIDE Logout");
         NavigationManager.NavigateTo("/");
        
    }

    private async Task EditatAdd(string username)
    {
        NavigationManager.NavigateTo($"/EditContact/{username}");
    }
}